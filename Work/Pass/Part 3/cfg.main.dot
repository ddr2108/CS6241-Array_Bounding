digraph "CFG for 'main' function" {
	label="CFG for 'main' function";

	Node0x280b3e0 [shape=record,label="{entry:\l  %retval = alloca i32, align 4\l  %d = alloca i32, align 4\l  %z = alloca i32, align 4\l  store i32 0, i32* %retval\l  call void @llvm.dbg.declare(metadata !\{i32* %d\}, metadata !12), !dbg !13\l  call void @llvm.dbg.declare(metadata !\{i32* %z\}, metadata !14), !dbg !13\l  store i32 7, i32* %z, align 4, !dbg !15\l  %0 = load i32* %z, align 4, !dbg !16\l  %cmp = icmp sgt i32 %0, 5, !dbg !16\l  br i1 %cmp, label %if.then, label %if.else, !dbg !16\l|{<s0>T|<s1>F}}"];
	Node0x280b3e0:s0 -> Node0x28067b0;
	Node0x280b3e0:s1 -> Node0x2806810;
	Node0x28067b0 [shape=record,label="{if.then:                                          \l  store i32 7, i32* %d, align 4, !dbg !18\l  br label %if.end, !dbg !20\l}"];
	Node0x28067b0 -> Node0x2806870;
	Node0x2806810 [shape=record,label="{if.else:                                          \l  store i32 9, i32* %d, align 4, !dbg !21\l  br label %if.end\l}"];
	Node0x2806810 -> Node0x2806870;
	Node0x2806870 [shape=record,label="{if.end:                                           \l  %1 = load i32* %z, align 4, !dbg !23\l  %add = add nsw i32 %1, 15, !dbg !23\l  store i32 %add, i32* %z, align 4, !dbg !23\l  %2 = load i32* %d, align 4, !dbg !24\l  %sub = sub nsw i32 %2, 5, !dbg !24\l  store i32 %sub, i32* %d, align 4, !dbg !24\l  %3 = load i32* %z, align 4, !dbg !25\l  %cmp1 = icmp sgt i32 %3, 5, !dbg !25\l  br i1 %cmp1, label %if.then2, label %if.else3, !dbg !25\l|{<s0>T|<s1>F}}"];
	Node0x2806870:s0 -> Node0x28068d0;
	Node0x2806870:s1 -> Node0x2806930;
	Node0x28068d0 [shape=record,label="{if.then2:                                         \l  store i32 7, i32* %z, align 4, !dbg !27\l  br label %if.end4, !dbg !29\l}"];
	Node0x28068d0 -> Node0x2806990;
	Node0x2806930 [shape=record,label="{if.else3:                                         \l  store i32 9, i32* %z, align 4, !dbg !30\l  br label %if.end4\l}"];
	Node0x2806930 -> Node0x2806990;
	Node0x2806990 [shape=record,label="{if.end4:                                          \l  %4 = load i32* %z, align 4, !dbg !32\l  %sub5 = sub nsw i32 %4, 5, !dbg !32\l  store i32 %sub5, i32* %z, align 4, !dbg !32\l  %5 = load i32* %retval, !dbg !33\l  ret i32 %5, !dbg !33\l}"];
}
